name: Build Docker Image for AWS Lambda

on:
    push:
        branches: [main]
        tags:
            - "v*"
    workflow_dispatch:

env:
    REGISTRY_GHCR: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    AWS_REGION: us-east-1 # Change to your AWS region
    ECR_REPOSITORY: test/hello-cloud # Change to your ECR repo name

jobs:
    build-lambda:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write # Required for OIDC authentication

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY_GHCR }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Configure AWS credentials via OIDC
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Log in to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Extract metadata (tags, labels)
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: |
                      ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}
                      ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
                  tags: |
                      type=raw,value=lambda-latest,enable=true
                      type=sha,prefix=lambda-
                      type=semver,pattern={{version}},suffix=-lambda
                      type=raw,value=latest,enable=true

            - name: Build and push Docker image for Lambda (x86_64 only)
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  platforms: linux/amd64
                  outputs: type=registry

            - name: Image digest
              run: echo ${{ steps.meta.outputs.digest }}
