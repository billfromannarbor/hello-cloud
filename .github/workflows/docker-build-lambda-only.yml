name: Build Docker Image for AWS Lambda (Single Arch)

on:
    push:
        branches: [main]
        tags:
            - "v*"
    workflow_dispatch:

env:
    AWS_REGION: us-east-1
    ECR_REPOSITORY: test/hello-cloud

jobs:
    build-lambda:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials via OIDC
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Log in to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build and push Docker image for Lambda (single arch x86_64)
              run: |
                  # Build for single architecture only (no multi-arch)
                  docker build \
                    --platform linux/amd64 \
                    --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:lambda-latest \
                    --tag ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest \
                    .

                  # Push to ECR
                  docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:lambda-latest
                  docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

            - name: Output image URI
              run: |
                  echo "Lambda image URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:lambda-latest"
                  echo "Latest image URI: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest"

